<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.2.xsd">
    <!--
    @Controller 标记在控制层的类注册为Bean主键
    @Service    标记在业务逻辑层的类注册为Bean主键
    @Repository 标记在数据访问层的类注册为Bean主键
    @Component  标记非三层普通类注册为Bean主键

    不是非要每个层对应相应的注解：1、增强可读性 2、利于spring管理
    -->
<!--    <bean class="com.ustc.controller.UserController" id="controller"></bean>-->

    <!-- 自动扫描包，开始使用注解
     base-package 设置需要扫描的包
                排除扫描: context:exclude-filter 设置需要排除扫描的选项
                包含扫描: context:include-filter 设置需要包含扫描的选项
                type： 1、annotation 默认 根据注解的完整限定名设置排除/包括
                       2、assignable      根据类的完整限定名设置排除/包括
     use-default-filters 默认为true ，会默认扫描@Controller  @Service   @Repository   @Component
                              false ，不会扫描

      怎么使用注解将一个类注册为Bean的步骤
      1、设置扫描包context:component-scan
      2、在对应的类名上加上注解

      使用上面注解会自动将类名的首字母小写设置为Bean的名字

     -->
    <context:component-scan base-package="com.ustc"></context:component-scan>
    <!-- 引用外部属性文件-->
    <context:property-placeholder location="db.properties"></context:property-placeholder>

</beans>